{"version":3,"sources":["sounds/meow.mp3","components/Card.js","components/CardList.js","components/SearchBox.js","cats.js","components/ErrorBoundry.js","containers/App.js","serviceWorker.js","index.js"],"names":["Card","name","age","id","food","soundUrl","meowSfx","React","useState","playbackRate","setPlaybackRate","count","setCount","useSound","volume","play","handleClick","onClick","className","src","alt","CardList","cats","map","user","i","SearchBox","searchChange","type","placeholder","onChange","ErrorBoundry","state","hasError","error","info","this","setState","props","children","Component","App","searchfield","setSearchfield","filteredCats","filter","cat","toLowerCase","includes","length","event","target","value","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.09996043.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/meow.f1798a6c.mp3\";","import React from 'react';\r\nimport useSound from \"use-sound\";\r\nimport meowSfx from \"../sounds/meow.mp3\";\r\nimport \"./Card.css\"\r\n\r\nconst Card = ({ name, age, id, food }) => {\r\n\r\n  const soundUrl = meowSfx;\r\n  const [playbackRate, setPlaybackRate] = React.useState(0.70);\r\n  const [count, setCount] = React.useState(0);\r\n\r\n  const [play] = useSound(soundUrl, {\r\n    playbackRate,\r\n    volume: 0.5,\r\n  });\r\n\r\n  const handleClick = () => {\r\n    setPlaybackRate(playbackRate + 0.05);\r\n    setCount(count + 1);\r\n    play();\r\n  };\r\n\r\n  return count === 15 ? <div onClick={handleClick} className=\"tc helvetica bg-red white dib br4 pa4 ma3 grow shadow-5 pointer\">\r\n    <img src={`https://robohash.org/set_set4/${id}?size=200x200`} alt=\"kitties\" />\r\n    <div>\r\n      <h1 className=\"white\">MIAU</h1>\r\n      <p className=\"white\">Miau</p>\r\n      <p className=\"white\">Miau</p>\r\n    </div>\r\n  </div> : (\r\n      <div onClick={handleClick} className=\"tc helvetica greyCard dib br4 pa4 ma3 grow shadow-5 pointer\">\r\n        <img src={`https://robohash.org/set_set4/${id}?size=200x200`} alt=\"kitties\" />\r\n        <div>\r\n          <h1>{name}</h1>\r\n          <p>Age: {age}</p>\r\n          <p>Fav Food: {food}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ cats }) => {\r\n  return (\r\n    <div>\r\n      {\r\n        cats.map((user, i) => {\r\n          return (\r\n            <Card\r\n              key={i}\r\n              id={cats[i].id}\r\n              name={cats[i].name}\r\n              age={cats[i].age}\r\n              food={cats[i].food}\r\n            />\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;","import React from 'react'\r\nimport \"./SearchBox.css\"\r\n\r\nexport default function SearchBox({ searchChange }) {\r\n  return (\r\n    <div className=\"mv4\">\r\n      <input\r\n        className=\"tc pa3 ba br4 f4 b--black-025 box-css shadow-5\"\r\n        type=\"search\"\r\n        placeholder=\"Find cats\"\r\n        onChange={searchChange} />\r\n    </div>\r\n  );\r\n}\r\n","export const cats = [{\r\n    id: 1,\r\n    name: \"Pixie\",\r\n    age: \"6\",\r\n    food: \"Tuna\"\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Daria\",\r\n    age: \"4\",\r\n    food: \"Shrimps\"\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Pepper\",\r\n    age: \"1\",\r\n    food: \"Chicken\"\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Bill\",\r\n    age: \"7\",\r\n    food: \"Ham\"\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Toga\",\r\n    age: \"3\",\r\n    food: \"Rice\"\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Caitlyn\",\r\n    age: \"9\",\r\n    food: \"Lobster\"\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Kindred\",\r\n    age: \"3\",\r\n    food: \"Tuna\"\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Laura\",\r\n    age: \"1\",\r\n    food: \"Fish\"\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"Max\",\r\n    age: \"6\",\r\n    food: \"Chips\"\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"Leona\",\r\n    age: \"9\",\r\n    food: \"Mice\"\r\n  },\r\n  {\r\n    id: 11,\r\n    name: \"Syndra\",\r\n    age: \"7\",\r\n    food: \"Tacos\"\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"Senna\",\r\n    age: \"4\",\r\n    food: \"Pizza\"\r\n  },\r\n  {\r\n    id: 13,\r\n    name: \"Nami\",\r\n    age: \"9\",\r\n    food: \"Noodles\"\r\n  },\r\n  {\r\n    id: 14,\r\n    name: \"Lulu\",\r\n    age: \"10\",\r\n    food: \"Popcorn\"\r\n  },\r\n  {\r\n    id: 15,\r\n    name: \"Soraka\",\r\n    age: \"4\",\r\n    food: \"Greens\"\r\n  },\r\n  {\r\n    id: 16,\r\n    name: \"Vayne\",\r\n    age: \"8\",\r\n    food: \"Currywurst\"\r\n  },\r\n  {\r\n    id: 17,\r\n    name: \"Tristana\",\r\n    age: \"2\",\r\n    food: \"Fries\"\r\n  },\r\n  {\r\n    id: 18,\r\n    name: \"Poppy\",\r\n    age: \"4\",\r\n    food: \"Cheese\"\r\n  },\r\n  {\r\n    id: 19,\r\n    name: \"Neeko\",\r\n    age: \"6\",\r\n    food: \"Milk\"\r\n  },\r\n  {\r\n    id: 20,\r\n    name: \"Lily\",\r\n    age: \"1\",\r\n    food: \"Tomatoes\"\r\n  }\r\n];","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Da ist was schief gelaufen!</h1>\r\n    } else {\r\n      return this.props.children\r\n    }\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { useState } from 'react';\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport { cats } from \"../cats\";\r\nimport ErrorBoundry from \"../components/ErrorBoundry\"\r\n\r\nimport \"./App.css\";\r\n\r\n\r\nfunction App() {\r\n  const [searchfield, setSearchfield] = useState(\"\")\r\n\r\n  const onSearchChange = (event) => {\r\n    setSearchfield(event.target.value);\r\n  }\r\n\r\n  const filteredCats = cats.filter(cat => {\r\n    return cat.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\r\n  })\r\n  return !cats.length ?\r\n    <h1 className=\"tc f1\">LÃ¤dt</h1> :\r\n    (\r\n      <div className=\"tc\">\r\n        <SearchBox searchChange={onSearchChange} />\r\n        <ErrorBoundry>\r\n          {!filteredCats.length ? <h1 className=\"white ma5 f1\">No Kitty found :(</h1> : <CardList cats={filteredCats} />}\r\n        </ErrorBoundry>\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}